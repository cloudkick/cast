/*
 * Licensed to Cloudkick, Inc ('Cloudkick') under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * Cloudkick licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var sys = require('sys');
var path = require('path');
var exec = require('child_process').exec;
var ps = require('util/pubsub');
var misc = require('util/misc');
var async = require('extern/async');
var assert = require('assert');

var service_management = require('service_management');

function getServer() {
  return require('services/http')._serverOnly();
}

(function() {
  var completed = false;
  var manager;

  async.series([
    // Prepare some directories
    async.apply(exec, "mkdir -p .tests/data_root/services"),
    async.apply(exec, "mkdir -p .tests/data_root/services-enabled"),

    // Start runit
    function(callback) {
      // TODO: Actually start runit
      callback();
    },

    // Get a (runit) service manager to play with
    function(callback) {
      manager = service_management.get_manager('runit').get_manager();
      callback();
    },

    // TODO: Actually test this

  ],
  function(err) {
    completed = true;
    assert.ifError(err);
  });

  process.on('exit', function() {
    assert.ok(completed, 'Tests completed');
  });
})();
